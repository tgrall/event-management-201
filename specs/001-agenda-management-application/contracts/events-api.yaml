openapi: 3.0.3
info:
  title: Event Management API
  description: REST API for agenda management application
  version: 1.0.0
servers:
  - url: http://localhost:3001/api
    description: Development server

paths:
  /events:
    get:
      summary: Get all events
      operationId: getAllEvents
      responses:
        '200':
          description: List of events
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Event'
    
    post:
      summary: Create a new event
      operationId: createEvent
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateEventRequest'
      responses:
        '201':
          description: Event created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
        '400':
          description: Invalid input data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /events/{eventId}:
    get:
      summary: Get event by ID
      operationId: getEventById
      parameters:
        - name: eventId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Event details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
        '404':
          description: Event not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    put:
      summary: Update event
      operationId: updateEvent
      parameters:
        - name: eventId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateEventRequest'
      responses:
        '200':
          description: Event updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
        '400':
          description: Invalid input data
        '404':
          description: Event not found

    delete:
      summary: Delete event
      operationId: deleteEvent
      parameters:
        - name: eventId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: Event deleted successfully
        '404':
          description: Event not found

  /events/{eventId}/time-slots:
    get:
      summary: Get time slots for an event
      operationId: getEventTimeSlots
      parameters:
        - name: eventId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: List of time slots
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TimeSlot'

components:
  schemas:
    Event:
      type: object
      required:
        - id
        - title
        - description
        - startDate
        - endDate
        - createdAt
        - updatedAt
      properties:
        id:
          type: string
          format: uuid
        title:
          type: string
          maxLength: 200
          example: "TechConf 2025"
        description:
          type: string
          example: "Annual technology conference with latest trends"
        startDate:
          type: string
          format: date
          example: "2025-10-15"
        endDate:
          type: string
          format: date
          example: "2025-10-17"
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time

    CreateEventRequest:
      type: object
      required:
        - title
        - description
        - startDate
        - endDate
      properties:
        title:
          type: string
          maxLength: 200
        description:
          type: string
        startDate:
          type: string
          format: date
        endDate:
          type: string
          format: date

    UpdateEventRequest:
      type: object
      properties:
        title:
          type: string
          maxLength: 200
        description:
          type: string
        startDate:
          type: string
          format: date
        endDate:
          type: string
          format: date

    TimeSlot:
      type: object
      required:
        - id
        - eventId
        - date
        - startTime
        - endTime
        - slotOrder
      properties:
        id:
          type: string
          format: uuid
        eventId:
          type: string
          format: uuid
        date:
          type: string
          format: date
        startTime:
          type: string
          pattern: '^([0-1]?[0-9]|2[0-3]):[0-5][0-9]$'
          example: "08:00"
        endTime:
          type: string
          pattern: '^([0-1]?[0-9]|2[0-3]):[0-5][0-9]$'
          example: "09:00"
        slotOrder:
          type: integer
          minimum: 0
          maximum: 9

    Error:
      type: object
      required:
        - message
      properties:
        message:
          type: string
        code:
          type: string
        details:
          type: object